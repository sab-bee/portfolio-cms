---
import { renderRichText, storyblokEditable } from "@storyblok/astro";

const { blok, counter } = Astro.props;
const renderTask = renderRichText(blok.tasks);
---

<div {...storyblokEditable(blok)} class="border-b border-black">
  <div
    class="tab select-none py-9 flex gap-x-8 justify-between items-center cursor-pointer hover:bg-neutral-100 px-8"
  >
    <div>
      <h2 class="text-2xl">{blok.organization}</h2>
      <h3 class="text-lg">{blok.title}</h3>
      <p>{blok.duration}</p>
    </div>
    <button class="toggle bg-black w-8 h-8 rounded-full text-white text-2xl">+</button>
  </div>
  <div class="desc mt-2 collapse mb-8 px-8" set:html={renderTask} />
</div>

<style>
  .collapse {
    display: none;
  }

  .desc {
    animation: dropdown 0.2s;
  }

  @keyframes dropdown {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .rotate {
    animation: rotation 0.2s forwards;
  }

  @keyframes rotation {
    from {
      transform: rotate(0);
    }
    to {
      transform: rotate(45deg);
      background: transparent;
      border: 1px solid black;
      color: black;
    }
  }
</style>

<script>
  const tabs = document.querySelectorAll(".tab");
  const descs = document.querySelectorAll(".desc");
  const toggles = document.querySelectorAll(".toggle");

  let reference = -1;

  tabs.forEach((tab, i) => {
    tab.addEventListener("click", () => {
      descs.forEach((desc) => {
        desc.classList.add("collapse");
      });
      toggles.forEach((toggle) => {
        toggle.classList.remove("rotate");
      });
      if (reference !== i) {
        descs[i].classList.remove("collapse");
        reference = i;
        toggles[i].classList.add("rotate");
      } else {
        descs[i].classList.add("collapse");
        reference = -1;
        toggles[i].classList.remove("rotate");
      }
    });
  });
</script>
